generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model player {
  user_id                 Int                       @id(map: "player_pk") @unique(map: "player_user_id_uindex")
  username                String                    @unique(map: "player_username_uindex")
  user_number             Int                       @unique(map: "player_user_number_uindex")
  player_app              player_app[]
  player_auth             player_auth[]
  player_teaken           player_teaken[]
  shadow_clan_group_admin shadow_clan_group_admin[]
  shadow_player           shadow_player[]
  shadow_player_task      shadow_player_task[]
}

model player_auth {
  user_id               Int
  api                   String
  access_token          String
  access_token_expires  DateTime @db.Date
  refresh_token         String
  refresh_token_expires DateTime @db.Date
  user_number           Int
  player                player   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "player_auth_player_user_id_fk")

  @@unique([api, user_number], map: "player_auth_application_user_number_uindex")
  @@unique([user_id, api], map: "player_auth_user_id_application_uindex")
}

model player_teaken {
  user_id Int
  teaken  String @unique(map: "player_teaken_teaken_uindex")
  player  player @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "player_teakens_player_user_id_fk")
}

model player_app {
  user_id     Int
  app         String
  user_number Int
  player      player @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "player_app_player_user_id_fk")

  @@unique([user_id, app], map: "player_app_user_id_app_uindex")
  @@unique([user_number, app], map: "player_app_user_number_app_uindex")
}

model shadow_player {
  user_id            Int
  game_id            Int
  clan_id            Int?
  group_id           Int?
  shadow_clan        shadow_clan?         @relation(fields: [clan_id, game_id], references: [clan_id, game_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_player_shadow_clan_clan_id_game_id_fk")
  shadow_clan_group  shadow_clan_group?   @relation(fields: [group_id], references: [group_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_player_shadow_clan_group_group_id_fk")
  player             player               @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_player_player_user_id_fk")
  shadow_player_task shadow_player_task[]

  @@id([user_id, game_id], map: "shadow_player_pk")
}

model shadow_player_task {
  user_id       Int
  game_id       Int
  task_id       Int
  value         Int?
  player        player        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_player_task_player_user_id_fk")
  shadow_player shadow_player @relation(fields: [user_id, game_id], references: [user_id, game_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_player_task_shadow_player_user_id_game_id_fk")

  @@unique([user_id, game_id, task_id], map: "shadow_player_task_user_id_game_id_task_id_uindex")
}

model shadow_clan {
  clan_id           Int
  game_id           Int
  group_id          Int?
  shadow_clan_group shadow_clan_group? @relation(fields: [group_id], references: [group_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_clan_shadow_clan_group_group_id_fk")
  shadow_player     shadow_player[]

  @@unique([clan_id, game_id], map: "shadow_clan_clan_id_game_id_uindex")
}

model shadow_clan_group {
  group_id                Int                       @unique(map: "shadow_clan_group_group_id_uindex") @default(autoincrement())
  name                    String
  group_text_id           String                    @unique(map: "shadow_clan_group_group_text_id_uindex")
  shadow_clan             shadow_clan[]
  shadow_clan_group_admin shadow_clan_group_admin[]
  shadow_player           shadow_player[]
}

model shadow_clan_group_admin {
  group_id          Int
  user_id           Int
  shadow_clan_group shadow_clan_group @relation(fields: [group_id], references: [group_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_clan_group_admin_shadow_clan_group_group_id_fk")
  player            player            @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "shadow_clan_group_admin_player_user_id_fk")

  @@unique([group_id, user_id], map: "shadow_clan_group_admin_group_id_user_id_uindex")
}
