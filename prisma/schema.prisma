generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model player {
  user_id       Int             @id(map: "player_pk") @unique(map: "player_user_id_uindex")
  username      String          @unique(map: "player_username_uindex")
  user_number   Int             @unique(map: "player_user_number_uindex")
  player_app    player_app[]
  player_auth   player_auth[]
  player_teaken player_teaken[]
}

model player_auth {
  user_id               Int
  api                   String
  access_token          String
  access_token_expires  DateTime @db.Date
  refresh_token         String
  refresh_token_expires DateTime @db.Date
  user_number           Int
  player                player   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "player_auth_player_user_id_fk")

  @@unique([api, user_number], map: "player_auth_application_user_number_uindex")
  @@unique([user_id, api], map: "player_auth_user_id_application_uindex")
}

model player_teaken {
  user_id Int
  teaken  String @unique(map: "player_teaken_teaken_uindex")
  player  player @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "player_teakens_player_user_id_fk")
}

model player_app {
  user_id     Int
  app         String
  user_number Int
  player      player @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "player_app_player_user_id_fk")

  @@unique([user_id, app], map: "player_app_user_id_app_uindex")
  @@unique([user_number, app], map: "player_app_user_number_app_uindex")
}
